{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MyCanvas","props","className","width","w","height","h","style","display","crossOrigin","id","src","Button","onClick","v","document","getElementById","ctx","getContext","play","addEventListener","i","window","setInterval","drawImage","ended","clearInterval","App","React","useState","setW","setH","myRef","createRef","default","x","y","scale","minWidth","minHeight","bounds","onResizeStop","e","direction","ref","delta","position","offsetHeight","offsetWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"+OA6DA,SAASA,EAASC,GAoBd,OACI,sBAAKC,UAAU,MAAMC,MAAOF,EAAMG,EAAGC,OAAQJ,EAAMK,EAAnD,UACI,uBAAOC,MAAO,CAACC,QAAS,QAAWC,YAAY,YAAYC,GAAG,SACvDC,IAAI,4EACX,wBAAQR,MAAM,MAAOE,OAAO,MAASK,GAAG,aAExC,uBACA,cAACE,EAAA,EAAD,CAAQC,QAzBL,SAACV,EAAME,GACdF,EAAMF,EAAMG,EACZC,EAAOJ,EAAMK,EACb,IAAIQ,EAAIC,SAASC,eAAe,UAE5BC,EADIF,SAASC,eAAe,YACpBE,WAAW,MACvBJ,EAAEK,OAEFL,EAAEM,iBAAiB,QAAQ,WACvB,IAAIC,EAAIC,OAAOC,aAAY,WACvBN,EAAIO,UAAUV,EAAG,EAAG,EAAGX,EAAOE,GAC3BS,EAAEW,OACDC,cAAcL,KAEnB,OACJ,IAUC,qBAWGM,MA5Ff,WAAgB,IAAD,EACIC,IAAMC,SAAS,KADnB,mBACNzB,EADM,KACJ0B,EADI,OAEGF,IAAMC,SAAS,KAFlB,mBAENvB,EAFM,KAEJyB,EAFI,KAGPC,EAAOJ,IAAMK,YAkBjB,OACI,qBAAK/B,UAAU,MAAMQ,GAAG,MAAxB,SAEI,eAAC,IAAD,CAAKR,UAAU,OACVgC,QAAS,CACLC,EAAG,IACHC,EAAG,IACHjC,MAAO,CAACC,KACRC,OAAQ,CAACC,KACT+B,MAAO,GAEXC,SAAU,IACVC,UAAW,IACXC,OAAO,SACPC,aAAc,SAACC,EAAGC,EAAWC,EAAKC,EAAOC,GACrCf,EAAKa,EAAIG,cACTjB,EAAKc,EAAII,aAhCf,SAAC7C,EAAME,GACd,IAAIS,EAAIC,SAASC,eAAe,UAE5BC,EADIF,SAASC,eAAe,YACpBE,WAAW,MACvBJ,EAAEK,OAEFL,EAAEM,iBAAiB,QAAQ,WACvB,IAAIC,EAAIC,OAAOC,aAAY,WACvBN,EAAIO,UAAUV,EAAG,EAAG,EAAGX,EAAOE,GAC3BS,EAAEW,OACDC,cAAcL,KAEnB,OACJ,GAoBUF,CAAKyB,EAAII,YAAYJ,EAAIG,eAdlC,eAgBG,8BACC,cAAC/C,EAAD,CAAU4C,IAAKZ,EAAO5B,EAAGA,EAAGE,EAAGA,EAAGJ,UAAU,iBCpC7C+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7C,SAASC,eAAe,SAM1BiC,M","file":"static/js/main.936e6574.chunk.js","sourcesContent":["import React  from \"react\";\nimport './App.css';\nimport { Rnd } from \"react-rnd\";\n\n\nimport Button from \"@mui/material/Button\";\n\nfunction App() {\n    let [w,setW ]= React.useState(300 )\n    let [h,setH] =React.useState(450)\n    let myRef =React.createRef()\n\n    let play = (width,height) =>{\n        let v = document.getElementById(\"video1\");\n        let c = document.getElementById(\"myCanvas\");\n        let ctx = c.getContext('2d');\n        v.play()//需求只说了 播放\n        //每10毫秒画一次图\n        v.addEventListener('play', function() {\n            let i = window.setInterval(function() {\n                ctx.drawImage(v, 1, 1, width, height);\n                if(v.ended){\n                    clearInterval(i)\n                }\n            }, 10);\n        }, false);\n    }\n\n    return (\n        <div className=\"App\" id='app'>\n\n            <Rnd className='drag'\n                 default={{\n                     x: 150,\n                     y: 205,\n                     width: {w},\n                     height: {h},\n                     scale: 3,\n                 }}\n                 minWidth={365}\n                 minHeight={212}\n                 bounds=\"window\"\n                 onResizeStop={(e, direction, ref, delta, position) => {\n                     setH(ref.offsetHeight)\n                     setW(ref.offsetWidth)\n                     play(ref.offsetWidth,ref.offsetHeight)\n                 }}\n            >  <div >\n                <MyCanvas ref={myRef} w={w} h={h} className='fcan'>\n                </MyCanvas>\n            </div>\n            </Rnd>\n\n\n\n\n        </div>\n    );\n}\n\n\nfunction MyCanvas(props) {\n\n    let play = (width,height) =>{\n        width=props.w;\n        height=props.h;\n        let v = document.getElementById(\"video1\");\n        let c = document.getElementById(\"myCanvas\");\n        let ctx = c.getContext('2d');\n        v.play()//需求只说了 播放\n        //每10毫秒画一次图\n        v.addEventListener('play', function() {\n            let i = window.setInterval(function() {\n                ctx.drawImage(v, 1, 1, width, height);\n                if(v.ended){\n                    clearInterval(i)\n                }\n            }, 10);\n        }, false);\n    }\n\n    return(\n        <div className='son' width={props.w} height={props.h}>\n            <video style={{display: 'none'}}   crossOrigin=\"anonymous\" id='video1'\n                   src=\"https://mdn.github.io/dom-examples/canvas/chroma-keying/media/video.mp4\"></video>\n            <canvas width='800'  height='600'    id='myCanvas'>\n            </canvas>\n            <br></br>\n            <Button onClick={play}>\n                play\n            </Button>\n\n        </div>\n    );\n}\n\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}